version: "3.8"

volumes:
  rabbitmq_data:

networks:
  backend_kong-net:
    external:
      name: backend_kong-net

services:
 
  ###################################
  # Stripe Wrapper: The Stripe Wrapper Microservice
  ###################################
  stripe_wrapper:
    build:
      context: ./
      dockerfile: stripe_wrapper.Dockerfile
    image: musyaffaq/stripe_wrapper:esd_project
    restart: always
    environment:
      PYTHONUNBUFFERED: 1
    ports:
      - "5002:5002"
    networks:
      - backend_kong-net

  ###################################
  # Order: The Order Microservice
  ###################################
  order:
    build:
      context: ./
      dockerfile: order.Dockerfile
    image: musyaffaq/order:esd_project
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/orders
      PYTHONUNBUFFERED: 1
    ports:
      - "5003:5003"
    networks:
      - backend_kong-net
 
  #######################################################
  # Inventory: The inventory Microservice
  #######################################################
  inventory:
    build:
      context: ./
      dockerfile: inventory.Dockerfile
    image: musyaffaq/inventory:esd_project
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/inventory
      PYTHONUNBUFFERED: 1
    ports:
      - "5001:5001"
    networks:
      - backend_kong-net

  ####################################
  # RabbitMQ: The messaging broker   
  ####################################
  rabbitmq:
    image: rabbitmq:3-management
    hostname: esd-rabbit
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes: 
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - backend_kong-net
      
  #################################################
  # Payment: The Payment Microservice
  #################################################
  payment:
    build:
      context: ./
      dockerfile: payment.Dockerfile
    image: musyaffaq/payment:esd_project
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/payment
      PYTHONUNBUFFERED: 1
    ports:
      - "5004:5004"
    networks:
      - backend_kong-net

  ###################################
  # Payment Log : The Payment Log Microservice
  ###################################
  payment_log:
    build:
      context: ./
      dockerfile: payment_log.Dockerfile
    image: musyaffaq/payment_log:esd_project
    restart: always
    depends_on:
      - rabbitmq
      - payment
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      payment_URL: http://payment:5004/payment
      PYTHONUNBUFFERED: 1
    networks:
      - backend_kong-net

  ###################################
  # Notification : The Notification Microservice
  ###################################
  notification:
    build:
      context: ./
      dockerfile: notification.Dockerfile
    image: musyaffaq/notification:esd_project
    restart: always
    depends_on:
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      PYTHONUNBUFFERED: 1
    networks:
      - backend_kong-net
  
  ###################################
  # Transaction : The Transaction Microservice
  ###################################
  transaction:
    build:
      context: ./
      dockerfile: transaction.Dockerfile
    image: musyaffaq/transaction:esd_project
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/transaction
      PYTHONUNBUFFERED: 1
    ports:
      - "5005:5005"
    networks:
      - backend_kong-net

  ###################################
  # Transaction Log : The Transaction Log Microservice
  ###################################
  transaction_log:
    build:
      context: ./
      dockerfile: transaction_log.Dockerfile
    image: musyaffaq/transaction_log:esd_project
    restart: always
    depends_on:
      - rabbitmq
      - transaction
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      transaction_URL: http://transaction:5005/transaction
      PYTHONUNBUFFERED: 1
    networks:
      - backend_kong-net

  ###############################################
  # Hawker Place Order: The Hawker Place Order Microservice
  ###############################################
  hawker_place_order:
    build:
      context: ./
      dockerfile: hawker_place_order.Dockerfile
    image: musyaffaq/hawker_place_order:esd_project
    restart: always
    depends_on:
      - order
      - inventory
      - notification
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      order_URL: http://order:5003/orders
      inventory_URL: http://inventory:5001/inventory
      PYTHONUNBUFFERED: 1
    ports:
      - "5100:5100"
    networks:
      - backend_kong-net
    
  ###############################################
  # Hawker Make Payment: The Hawker Make Payment Microservice
  ###############################################
  hawker_payment:
    build:
      context: ./
      dockerfile: hawker_payment.Dockerfile
    image: musyaffaq/hawker_payment:esd_project
    restart: always
    depends_on:
      - payment
      - order
      - notification
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      order_URL: http://order:5003/orders
      payment_URL: http://payment:5004/payment 
      PYTHONUNBUFFERED: 1
    ports:
      - "5101:5101"
    networks:
      - backend_kong-net

  ###############################################
  # Washing Vendor update: The Washing Vendor Update Microservice
  ###############################################
  washing_vendor_update:
    build:
      context: ./
      dockerfile: washing_vendor_update.Dockerfile
    image: musyaffaq/washing_vendor_update:esd_project
    restart: always
    depends_on:
      - transaction
      - inventory
      - notification
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      transaction_URL: http://transaction:5005/transaction
      inventory_URL: http://inventory:5001/inventory 
      PYTHONUNBUFFERED: 1
    ports:
      - "5102:5102"
    networks:
      - backend_kong-net

